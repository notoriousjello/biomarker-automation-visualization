Sample,
.keep_all = TRUE) %>%
separate(col = Sample,
into = c("Sample","Visit"),
sep = "_")
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_sample <- intraplate_cvs_sample %>%
drop_na(Sample)
intraplate_cvs_sample <- intraplate_cvs_sample[order(
intraplate_cvs_sample$Sample),]
#---------------------------------------------------INTRA STANDARDS--------------------------------------------------
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(n = 2)
intraplate_cvs_std <- distinct(intraplate_cvs_std,
Sample,
.keep_all = TRUE)
colnames(intraplate_cvs_std) <- paste(colnames(intraplate_cvs_std),
"std",
sep = "_")
colnames(intraplate_cvs_std)[1] = "Standard"
#------------------------------------------------------INTRA QC------------------------------------------------------
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample)) %>%
add_column(n = 4)
intraplate_cvs_qc$`Calc. Conc. CV` <- as.numeric(as.character(intraplate_cvs_qc$`Calc. Conc. CV`))
intraplate_cvs_qc$`Calc. Conc. CV` <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intraplate_cvs_qc <- distinct(intraplate_cvs_qc,
Sample,
.keep_all = TRUE)
colnames(intraplate_cvs_qc) <- paste(colnames(intraplate_cvs_qc),
"QC",
sep = "_")
colnames(intraplate_cvs_qc)[1] = "QC"
intracvs_group <- qpcR:::cbind.na(intraplate_cvs_sample,
intraplate_cvs_std,
intraplate_cvs_qc)
}
source("./automation.r")
source("./automation.R")
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
source("./automation.R")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
# reads a specific plate from the raw data file
raw_data <- raw_data %>%
filter(`Plate Name` == "Plate_23M14ARH46_Set1")
automation(raw_data)
view(set_1)
set_1 <- automation(raw_data)
view(set_1)
View(set_1)
set_1 <- automation(raw_data)
view(set_1)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
set_1 <- automation(raw_data)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
set_1 <- automation(raw_data)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
set_1 <- automation(raw_data)
view(set_1)
set_1 <- automation(raw_data)
View(set_1)
View(set_1)
set_1 <- automation(raw_data)
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
set_1,
# sets the path where the excel will be saved
path = "test.xlsx",
#path = "test_data.xlsx",
# writes columns to top of file
col_names = TRUE
set_1 <- automation(raw_data)
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
set_1,
# sets the path where the excel will be saved
path = "test.xlsx",
#path = "test_data.xlsx",
# writes columns to top of file
col_names = TRUE)
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
# reads a specific plate from the raw data file
raw_data <- raw_data %>%
filter(`Plate Name` == "Plate_23M14ARH46_Set1")
sets <- lapply(biomarker_plates, automation)
source("./automation.R")
sets <- lapply(biomarker_plates, automation)
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
sets <- lapply(biomarker_plates, automation)
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
sets <- lapply(biomarker_plates, automation)
sets <- lapply(raw_data, automation)
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
sets <- lapply(raw_data, automation)
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
set_1,
# sets the path where the excel will be saved
path = paste("set", ".xlsx", sep = "_"),
#path = "test_data.xlsx",
# writes columns to top of file
col_names = TRUE)
set_1 <- automation(raw_data)
set_1 <- automation(raw_data)
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
set_1,
# sets the path where the excel will be saved
path = paste("set", ".xlsx", sep = "_"),
#path = "test_data.xlsx",
# writes columns to top of file
col_names = TRUE)
View(biomarker_plates)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
sets <- lapply(biomarker_plates, automation)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
sets <- lapply(biomarker_plates, automation)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw_data <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw_data$`Plate Name`))
print(biomarker_plates)
sets <- lapply(biomarker_plates, automation)
View(biomarker_plates)
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw$`Plate Name`))
print(biomarker_plates)
sets <- lapply(biomarker_plates, automation)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
set_1 <- automation(raw_data)
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
biomarker_plates <- as.list(unique(
raw$`Plate Name`))
print(biomarker_plates)
split_plates <-split(raw ,
raw$`Plate Name`)
split_plates <-split(raw ,
raw$`Plate Name`)
View(split_plates)
plate_dataframes <- lapply(split_plates, automation)
View(split_plates)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
plate_names <- as.list(unique(
raw$`Plate Name`))
print(plate_names)
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
plate_dataframes <- lapply(split_plates, automation)
View(plate_dataframes)
lapply(plate_dataframes,
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
plate_dataframes,
# sets the path where the excel will be saved
path = paste("set", ".xlsx", sep = "_"),
# writes columns to top of file
col_names = TRUE))
lapply(plate_dataframes,
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
plate_dataframes,
# sets the path where the excel will be saved
path = paste(plate_dataframes, ".xlsx", sep = "_"),
# writes columns to top of file
col_names = TRUE))
lapply(plate_dataframes,
function(x) write_xlsx(plate_dataframes,
path = paste(x,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function(x) write_xlsx(plate_dataframes,
path = paste(plate_dataframes,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function(x) write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function(x) write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
View(plate_dataframes)
test <- automation(split_plates[1])
View(split_plates)
view(plate_dataframes)
View(plate_dataframes)
View(plate_dataframes)
lapply(plate_dataframes,
function(plate_dataframes) write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
plate_names <- as.list(unique(
raw$`Plate Name`))
print(plate_names)
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
plate_dataframes <- lapply(split_plates, automation)
lapply(plate_dataframes,
function(plate_dataframes) write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function(plate_dataframes) write_xlsx(plate_dataframes,
path = paste(plate_dataframes,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function(plate_dataframes) write_xlsx(plate_dataframes,
path = paste(plate_dataframes,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function(plate_dataframes) write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function() write_xlsx(plate_dataframes,
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
lapply(plate_dataframes,
function() write_xlsx(
path = paste(plate_names,
"Processed_Data.xlsx",
sep = "_")))
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
path = paste(x, "processed_data.xlsx",
sep = "_")))
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
README <- read_excel("ReadME_Template.xlsx")
# reads in the automation script as a callable function
source("./automation.R")
list <- c("1","2","3","4","5","6","7","8","9","10","11")
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
plate_dataframes <- lapply(split_plates, automation)
lapply(names(list),
function(x) write_xlsx(plate_dataframes[[x]],
path = paste(x, "Processed_Data.xlsx",
sep = "_")))
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
path = paste(x, "Processed_Data.xlsx",
sep = "_")))
list <- c("1","2","3","4","5","6","7","8","9","10","11")
list <- as.list("1","2","3","4","5","6","7","8","9","10","11")
View(list)
list <- c("1","2","3","4","5","6","7","8","9","10","11") %>%
as.list(list)
View(list)
lapply(names(list),
function(x) write_xlsx(plate_dataframes[[x]],
path = paste(x, "Processed_Data.xlsx",
sep = "_")))
lapply(names(list),
function(x) write_xlsx(plate_dataframes[[x]],
path = paste(x, "Processed_Data.xlsx",
sep = "_")))
View(plate_dataframes)
debugSource("~/GitHub/biomarker-automation-visualization/automation.R")
# makes a list of all of the plates in the plate name column
plate_names <- as.list(unique(
raw$`Plate Name`))
print(plate_names)
# tidyverse allows us to do our data processing
library("tidyverse")
# readxl allows us to read excel files
library("readxl")
# writexl allows us to write to excel files
library("writexl")
# tidyr lets us reshape our long data into wide data
library("tidyr")
# qpcR lets us merge data frames side by side
library("qpcR")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\ALL_TNFR1_Data_Set1-11.xlsx",
sheet = "RawData")
# reads in the automation script as a callable function
source("./automation.R")
# makes a list of all of the plates in the plate name column
plate_names <- as.list(unique(
raw$`Plate Name`))
print(plate_names)
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
plate_dataframes <- lapply(split_plates, automation)
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
path = paste(x, "TNFR-1_PD.xlsx",
sep = "_")))
# tidyverse allows us to do our data processing
library("tidyverse")
# readxl allows us to read excel files
library("readxl")
# writexl allows us to write to excel files
library("writexl")
# tidyr lets us reshape our long data into wide data
library("tidyr")
# qpcR lets us merge data frames side by side
library("qpcR")
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\All_Ang1Ang2_Data_Set1-11.xlsx",
sheet = "RawData")
# reads in the automation script as a callable function
source("./automation.R")
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
# applies the automation function to the various split plates
plate_dataframes <- lapply(split_plates, automation)
# writes multiple excel files using the list of data frames above
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
# CHANGE THIS TO THE ASSAYS RUN
path = paste(x, "TNFR-1_PD.xlsx",
sep = "_")))
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\All_Ang1Ang2_Data_Set1-11.xlsx",
sheet = "RawData")
# reads in the automation script as a callable function
source("./automation.R")
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
# applies the automation function to the various split plates
plate_dataframes <- lapply(split_plates, automation)
# writes multiple excel files using the list of data frames above
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
# CHANGE THIS TO THE ASSAYS RUN
path = paste(x, "Ang-1/2_PD.xlsx",
sep = "_")))
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\All_Ang1Ang2_Data_Set1-11.xlsx",
sheet = "RawData")
# reads in the automation script as a callable function
source("./automation.R")
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
# applies the automation function to the various split plates
plate_dataframes <- lapply(split_plates, automation)
# writes multiple excel files using the list of data frames above
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
# CHANGE THIS TO THE ASSAYS RUN
path = paste(x, "Ang1Ang2_PD.xlsx",
sep = "_")))
# reads the raw data excel file and stores it as a variable
# FOR NEW USERS:
#     CHANGE THE PATH IN THE read_excel FUNCTION TO THE RAW DATA EXCEL
raw <- read_excel("CITRC\\raw_data\\All_Ang1Ang2_Data_Set1-11.xlsx",
sheet = "RawData")
# reads in the automation script as a callable function
source("./automation.R")
# splits the raw data into separate plate based data frames
split_plates <- split(raw ,
raw$`Plate Name`)
# applies the automation function to the various split plates
plate_dataframes <- lapply(split_plates, automation)
# writes multiple excel files using the list of data frames above
lapply(names(plate_dataframes),
function(x) write_xlsx(plate_dataframes[[x]],
# CHANGE THIS TO THE ASSAYS RUN
path = paste(x, "Ang1Ang2_PD.xlsx",
sep = "_")))
