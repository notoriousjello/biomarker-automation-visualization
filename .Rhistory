labs(x = "[sFas]",
y = " ")
# creats a grid of the jitter plots created above
figure <- ggarrange(ang2_p_jitter, il18_p_jitter, ngal_p_jitter, sfas_p_jitter,
ncol = 2,   # number of columns
nrow = 2)   # number of rows
# adds annotations/titles to the grid
annotate_figure(figure,
top = text_grob("Biomarker Concentrations and Rates of Prevalent AKI
in CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"))
# boxplot grid creation for prevalent aki
ang2_p_box <- ggplot(data = bio_clinical_NA, aes(x = log_ang2, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[Ang-2]",
y = " ")
il18_p_box <- ggplot(data = bio_clinical_NA, aes(x = log_il18, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[IL-18]",
y = " ")
ngal_p_box <- ggplot(data = bio_clinical_NA, aes(x = log_ngal, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[NGAL]",
y = " ")
sfas_p_box <- ggplot(data = bio_clinical_NA, aes(x = log_sfas, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[sFas]",
y = " ")
figure <- ggarrange(ang2_p_box, il18_p_box, ngal_p_box, sfas_p_box,
ncol = 2,
nrow = 2)
annotate_figure(figure,
top = text_grob("Biomarker Concentrations and Rates of Prevalent AKI
in CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"))
# subsets the bio_clinical_NA data by positive covid diagnosis
bio_clinical_covpos <- bio_clinical_NA %>%
filter(COVID19 == "1")
# regenerating the prevalent aki jitter plots but subsetted by positive covid diagnosis
ang2_p_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_ang2, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[Ang-2]",
y = " ")
il18_p_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_il18, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[IL-18]",
y = " ")
ngal_p_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_ngal, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[NGAL]",
y = " ")
sfas_p_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_sfas, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[sFas]",
y = " ")
p_covpos_jit_grid <- ggarrange(ang2_p_covpos_jit, il18_p_covpos_jit, ngal_p_covpos_jit, sfas_p_covpos_jit,
ncol = 2,
nrow = 2)
annotate_figure(p_covpos_jit_grid,
top = text_grob("Biomarker Concentrations and Rates of Prevalent AKI
in COVID-19 Positive CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"))
# regenerating prevalent aki boxplots but subsetted by positive covid diagnosis
ang2_p_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_ang2, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[Ang-2]",
y = " ") +
scale_x_continuous(limits = c(1,10))
il18_p_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_il18, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[IL-18]",
y = " ") +
scale_x_continuous(limits = c(3,12))
ngal_p_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_ngal, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[NGAL]",
y = " ") +
scale_x_continuous(limits = c(7.5,17.5))
sfas_p_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_sfas, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[sFas]",
y = " ") +
scale_x_continuous(limits = c(5,12))
p_covpos_box_grid <- ggarrange(ang2_p_covpos_box, il18_p_covpos_box, ngal_p_covpos_box, sfas_p_covpos_box,
ncol = 2,
nrow = 2)
annotate_figure(p_covpos_box_grid,
top = text_grob("Biomarker Concentrations and Rates of Prevalent AKI
in COVID-19 Positive CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"))
# subsets the bio_clinical_NA data by negative covid diagnosis
bio_clinical_covneg <- bio_clinical_NA %>%
filter(COVID19 == "0")
# regenerating the prevalent aki jitter plots but subsetted by negative covid diagnosis
ang2_p_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_ang2, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[Ang-2]",
y = " ")
il18_p_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_il18, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[IL-18]",
y = " ")
ngal_p_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_ngal, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[NGAL]",
y = " ")
sfas_p_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_sfas, y = prevalent_aki)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[sFas]",
y = " ")
p_covneg_jit_grid <- ggarrange(ang2_p_covneg_jit, il18_p_covneg_jit, ngal_p_covneg_jit, sfas_p_covneg_jit,
ncol = 2,
nrow = 2)
annotate_figure(p_covneg_jit_grid,
top = text_grob("Biomarker Concentrations and Rates of Prevalent AKI
in COVID-19 Negative CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"))
# regenerating prevalent aki boxplots but subsetted by negative covid diagnosis
ang2_p_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_ang2, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[Ang-2]",
y = " ") +
scale_x_continuous(limits = c(1,10))
il18_p_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_il18, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[IL-18]",
y = " ") +
scale_x_continuous(limits = c(3,12))
ngal_p_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_ngal, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[NGAL]",
y = " ") +
scale_x_continuous(limits = c(7.5,17.5))
sfas_p_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_sfas, y = prevalent_aki)) +
geom_boxplot() +
labs(x = "[sFas]",
y = " ") +
scale_x_continuous(limits = c(5,12))
p_covneg_box_grid <- ggarrange(ang2_p_covneg_box, il18_p_covneg_box, ngal_p_covneg_box, sfas_p_covneg_box,
ncol = 2,
nrow = 2)
annotate_figure(p_covneg_box_grid,
top = text_grob("Biomarker Concentrations and Rates of Prevalent AKI
in COVID-19 Negative CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"))
# creates a comparison plot grid displaying biomarker concentrations and covid diagnosis
cov_biomarker_grid <- ggarrange(ang2_p_covneg_box, il18_p_covneg_box, ngal_p_covneg_box, sfas_p_covneg_box,
ang2_p_covpos_box, il18_p_covpos_box, ngal_p_covpos_box, sfas_p_covpos_box,
ncol = 4,
nrow = 2)
cov_biomarker_grid <- annotate_figure(cov_biomarker_grid,
top = text_grob("Biomarker Concentrations, Rates of Prevalent AKI, and COVID-19 Status
in CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No AKI | 1 = AKI",
size = 10,
face = "bold"),
left = text_grob("      COVID-19 Positive                                             COVID-19 Negative",
rot = 90,
face = "bold",
size = 10))
ggsave(file = "visualizations\\biomarker_covid_prevalent_aki.png",
plot = cov_biomarker_grid,
height = 7,
width = 14,
dpi = 300)
# Enables us to read excel files
library("readxl")
# Allows us to do data processing and clean-up
library("tidyverse")
# Enables us to write to an excel file
library("writexl")
# GGally alows us to use their pairs funtion
library("GGally")
# ggplot2 lets us make pretty graphs
library("ggplot2")
# ggpubr
library("ggpubr")
bio_clinical <- read_excel("data_merges\\Biomarker_Assays_and_Clinical_Data_20221122.xlsx")
# creates new columns for the log transformations of the biomarker concentrations
bio_clinical$log_ang2 <- log(bio_clinical$`urine_ang-2_V1 (pg/mL)`)
bio_clinical$log_il18 <- log(bio_clinical$`urine_il18_V1 (pg/mL)`)
bio_clinical$log_ngal <- log(bio_clinical$`urine_ngal_V1 (pg/mL)`)
bio_clinical$log_sfas <- log(bio_clinical$`urine_sfas_V1 (pg/mL)`)
# converts covid19 diagnosis to 0 for neg and 1 for pos
bio_clinical['COVID19'][bio_clinical['COVID19'] == 'pos'] <- "1"
bio_clinical['COVID19'][bio_clinical['COVID19'] == 'Pos'] <- "1"
bio_clinical['COVID19'][bio_clinical['COVID19'] == 'neg'] <- "0"
bio_clinical$COVID19<- as.numeric(as.character(bio_clinical$COVID19))
# converts dialysis from numeric into a character for better visualization
bio_clinical$dialysis_hosp <- as.character(bio_clinical$dialysis_hosp)
# filters out patients with no clinical data
bio_clinical_NA <- bio_clinical %>%
filter(dialysis_hosp != "NA")
# creates a jitter plot of the ang 2 levels and use of dialysis
ang2_d_jitter <-
ggplot(data = bio_clinical_NA,                          # selects dataframe
mapping = (aes(x = log_ang2, y = dialysis_hosp))) +   # maps variables to x and y
geom_jitter(width = 0,                                  # sets parameters for the jitter
height = 0.2) +
labs(x = "[Ang-2]",                                     # labels axes
y = " ")
il18_d_jitter <-
ggplot(data = bio_clinical_NA,
mapping = (aes(x = log_il18, y = dialysis_hosp))) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[IL-18]",
y = " ")
sfas_d_jitter <-
ggplot(data = bio_clinical_NA,
mapping = (aes(x = log_sfas, y = dialysis_hosp))) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[sFas]",
y = " ")
ngal_d_jitter <-
ggplot(data = bio_clinical_NA,
mapping = (aes(x = log_ngal, y = dialysis_hosp))) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[NGAL]",
y = " ")
# creates a 2x2 matrix of the four jitter plots
figure <- ggarrange(ang2_d_jitter, il18_d_jitter, ngal_d_jitter, sfas_d_jitter,
ncol = 2,
nrow = 2)
# annotates the figure with a title and description
figure <- annotate_figure(figure,
top = text_grob("Biomarker Concentrations and Rates of Dialysis
in CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"))
ggsave(file = "visualizations\\biomarker_dialysis_scatter.png",
plot = figure,
height = 7,
width = 14)
# boxplot creation with Dialysis data
ang2_d_box <- ggplot(data = bio_clinical_NA, aes(x = log_ang2, y = dialysis_hosp)) +
geom_boxplot()+
labs(x = "[Ang-2]",
y = " ")
il18_d_box <- ggplot(data = bio_clinical_NA, aes(x = log_il18, y = dialysis_hosp)) +
geom_boxplot()+
labs(x = "[IL-18]",
y = " ")
sfas_d_box <- ggplot(data = bio_clinical_NA, aes(x = log_sfas, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[sFas]",
y = " ")
ngal_d_box <- ggplot(data = bio_clinical_NA, aes(x = log_ngal, y = dialysis_hosp)) +
geom_boxplot()+
labs(x = "[NGAL]",
y = " ")
figure <- ggarrange(ang2_d_box, il18_d_box, ngal_d_box, sfas_d_box,
ncol = 2,
nrow = 2)
figure <- annotate_figure(figure,
top = text_grob("Biomarker Concentrations and Rates of Dialysis
in CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"))
ggsave(file = "visualizations\\biomarker_dialysis_box.png",
plot = figure,
height = 7,
width = 14)
# subsets the bio_clinical_NA data by positive covid diagnosis
bio_clinical_covpos <- bio_clinical_NA %>%
filter(COVID19 == "1")
# regenerating the dialysis jitter plots but subsetted by positive covid diagnosis
ang2_d_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_ang2, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[Ang-2]",
y = " ")
il18_d_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_il18, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[IL-18]",
y = " ")
ngal_d_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_ngal, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[NGAL]",
y = " ")
sfas_d_covpos_jit <- ggplot(data = bio_clinical_covpos, aes(x = log_sfas, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[sFas]",
y = " ")
d_covpos_jit_grid <- ggarrange(ang2_d_covpos_jit, il18_d_covpos_jit, ngal_d_covpos_jit, sfas_d_covpos_jit,
ncol = 2,
nrow = 2)
annotate_figure(d_covpos_jit_grid,
top = text_grob("Biomarker Concentrations and Rates of Dialysis
in COVID-19 Positive CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"))
# regenerating dialysis boxplots but subsetted by positive covid diagnosis
ang2_d_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_ang2, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[Ang-2]",
y = " ") +
scale_x_continuous(limits = c(1,10))
il18_d_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_il18, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[IL-18]",
y = " ") +
scale_x_continuous(limits = c(3,12))
ngal_d_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_ngal, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[NGAL]",
y = " ") +
scale_x_continuous(limits = c(7.5,17.5))
sfas_d_covpos_box <- ggplot(data = bio_clinical_covpos, aes(x = log_sfas, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[sFas]",
y = " ") +
scale_x_continuous(limits = c(5,12))
d_covpos_box_grid <- ggarrange(ang2_d_covpos_box, il18_d_covpos_box, ngal_d_covpos_box, sfas_d_covpos_box,
ncol = 2,
nrow = 2)
annotate_figure(d_covpos_box_grid,
top = text_grob("Biomarker Concentrations and Rates of Dialysis
in COVID-19 Positive CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"))
# subsets the bio_clinical_NA data by negative covid diagnosis
bio_clinical_covneg <- bio_clinical_NA %>%
filter(COVID19 == "0")
# regenerating the Dialysis jitter plots but subsetted by negative covid diagnosis
ang2_d_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_ang2, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[Ang-2]",
y = " ")
il18_d_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_il18, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[IL-18]",
y = " ")
ngal_d_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_ngal, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[NGAL]",
y = " ")
sfas_d_covneg_jit <- ggplot(data = bio_clinical_covneg, aes(x = log_sfas, y = dialysis_hosp)) +
geom_jitter(width = 0,
height = 0.2) +
labs(x = "[sFas]",
y = " ")
d_covneg_jit_grid <- ggarrange(ang2_d_covneg_jit, il18_d_covneg_jit, ngal_d_covneg_jit, sfas_d_covneg_jit,
ncol = 2,
nrow = 2)
annotate_figure(d_covneg_jit_grid,
top = text_grob("Biomarker Concentrations and Rates of Dialysis
in COVID-19 Negative CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"))
# regenerating dialysis boxplots but subsetted by negative covid diagnosis
ang2_d_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_ang2, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[Ang-2]",
y = " ") +
scale_x_continuous(limits = c(1,10))
il18_d_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_il18, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[IL-18]",
y = " ") +
scale_x_continuous(limits = c(3,12))
ngal_d_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_ngal, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[NGAL]",
y = " ") +
scale_x_continuous(limits = c(7.5,17.5))
sfas_d_covneg_box <- ggplot(data = bio_clinical_covneg, aes(x = log_sfas, y = dialysis_hosp)) +
geom_boxplot() +
labs(x = "[sFas]",
y = " ") +
scale_x_continuous(limits = c(5,12))
d_covneg_box_grid <- ggarrange(ang2_d_covneg_box, il18_d_covneg_box, ngal_d_covneg_box, sfas_d_covneg_box,
ncol = 2,
nrow = 2)
annotate_figure(d_covneg_box_grid,
top = text_grob("Biomarker Concentrations and Rates of Dialysis
in COVID-19 Negative CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"))
# creates a comparison plot grid displaying biomarker concentrations and covid diagnosis
cov_biomarker_grid <- ggarrange(ang2_d_covneg_box, il18_d_covneg_box, ngal_d_covneg_box, sfas_d_covneg_box,
ang2_d_covpos_box, il18_d_covpos_box, ngal_d_covpos_box, sfas_d_covpos_box,
ncol = 4,
nrow = 2)
annotate_figure(cov_biomarker_grid,
top = text_grob("Biomarker Concentrations, Rates of Dialysis, and COVID-19 Status
in CHROME Participants",
size = 12,
face = "bold"),
bottom = text_grob("Concentrations are LN transformed and taken from the first visit
0 = No Dialysis | 1 = Dialysis",
size = 10,
face = "bold"),
left = text_grob("    COVID-19 Positive                COVID-19 Negative",
rot = 90,
face = "bold",
size = 10,
vjust = 2))
# Enables us to read excel files
library("readxl")
# Allows us to do data processing and clean-up
library("tidyverse")
# Enables us to write to an excel file
library("writexl")
# ggplot2 lets us make pretty graphs
library("ggplot2")
# assigns the plate excel sheet to a variable
biomarker <- read_excel("raw_data\\CHR_US_V1_Ang-2_MSD_Plates1-6_Data_NO_SKS_JH_4-7-2022.xlsx", sheet = "RawData")
# replaces NaN with NA
biomarker$`Calc. Conc. Mean`[is.nan(biomarker$`Calc. Conc. Mean`)] <- NA
# converts the variable type into numeric
biomarker$`Calc. Conc. Mean` <- as.numeric(as.character(biomarker$`Calc. Conc. Mean`))
# takes the natural log of the calc conc mean
biomarker$log_calc_conc_mean <- log(biomarker$`Calc. Conc. Mean`)
# changes plate names
biomarker$`Plate Name`[biomarker$`Plate Name` == "Plate1b_23L0EAV560"] <- "Plate 1"
biomarker$`Plate Name`[biomarker$`Plate Name` == "Plate2_23L0EA9196"] <- "Plate 2"
biomarker$`Plate Name`[biomarker$`Plate Name` == "Plate3_23L0EA3190"] <- "Plate 3"
biomarker$`Plate Name`[biomarker$`Plate Name` == "Plate4_23L0EAC191"] <- "Plate 4"
biomarker$`Plate Name`[biomarker$`Plate Name` == "Plate5_23L0EA2192"] <- "Plate 5"
biomarker$`Plate Name`[biomarker$`Plate Name` == "Plate6_23L0EAG193"] <- "Plate 6"
# creates the ggplot variable for the box plot
plate_groups <- ggplot(data = biomarker,
mapping = aes(x = `Plate Name`,
y = log_calc_conc_mean)) +
# makes the boxplot visualization
geom_boxplot() +
# creates the axes labels as well as the title and subtitle
labs(x = "Plate Number",
y = "LN Calculated Concentration Mean",
title = "Batch Effects in MSD Biomarker Assays",
subtitle = "Plates ran on 2022-04-07 by Nick O'Connor, Sharon Sahi, and Julia Hallowell") +
theme(plot.subtitle = element_text(size = 8)) # reduces the size of the subtitle
# saves the plot as a PNG
ggsave(file = "visualizations\\20220407_MSD_Batch_Effect.png",  # file output location
plot = plate_groups,                                     # plot to output
height = 7,
width = 10)
gc()
