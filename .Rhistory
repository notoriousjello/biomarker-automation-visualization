# creates an LLOD dataframe with just QC
llod_qc <- llod %>%
filter(grepl("QC", llod$Sample)) %>%
add_column(empty_column = NA)
# creates a data frame that tallies the number of samples with a detection range at or below the detection/fit curve
llod_count <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
group_by(`Detection Range`) %>%
tally()
# converts the long data into wide format
llod_count <- pivot_wider(llod_count,
names_from = `Detection Range`,
values_from = `n`)
# merges the various llod dataframes side by side
llod_group <- qpcR:::cbind.na(llod_sample, llod_std, llod_qc, llod_count)
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample <- intraplate_cvs[as.numeric(as.character(intraplate_cvs$Sample))]
intraplate_cvs_sample$Sample <- intraplate_cvs[as.numeric(as.character(intraplate_cvs$Sample))]
intraplate_cvs_sample <- as.numeric(as.character(intraplate_cvs$Sample))
intraplate_cvs_sample$sample <- as.numeric(as.character(intraplate_cvs$Sample))
View(intraplate_cvs_sample)
intraplate_cvs_sample$sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs <- distinct(intraplate_cvs,
Sample,
.keep_all = TRUE)
# adds a new column specifying the number of replicates
intraplate_cvs$`n =` <- 2
View(intraplate_cvs_sample)
View(intraplate_cvs)
View(intraplate_cvs_sample)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs <- distinct(intraplate_cvs,
Sample,
.keep_all = TRUE)
# adds a new column specifying the number of replicates
intraplate_cvs$`n =` <- 2
View(intraplate_cvs)
View(intraplate_cvs_sample)
View(intraplate_cvs)
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. Mean`)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA)
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample))
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. Mean`)
intraplate_cvs <- distinct(intraplate_cvs,
Sample,
.keep_all = TRUE)
# adds a new column specifying the number of replicates
intraplate_cvs$`n =` <- 2
View(intraplate_cvs_qc)
View(intraplate_cvs_qc)
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample))
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. Mean`)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA)
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample))
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. Mean`)
intraplate_cvs <- distinct(intraplate_cvs,
Sample,
.keep_all = TRUE)
# adds a new column specifying the number of replicates
intraplate_cvs$`n =` <- 2
View(intraplate_cvs_qc)
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
View(intraplate_cvs_qc)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA)
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample))
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intraplate_cvs <- distinct(intraplate_cvs,
Sample,
.keep_all = TRUE)
# adds a new column specifying the number of replicates
intraplate_cvs$`n =` <- 2
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA)
# qc
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample))
# creates a new column that is the mean of the QC
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intracvs_group <- qpcR:::cbind.na(intraplate_cvs_sample, intraplate_cvs_std, intraplate_cvs_qc)
intracvs_group <- distinct(intracvs_group,
Sample,
.keep_all = TRUE)
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA) %>%
distinct(intraplate_cvs_std)
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA) %>%
distinct(intraplate_cvs_std,
sample)
intraplate_cvs_sample <- distinct(intraplate_cvs_sample,
Sample,
.keep_all = TRUE)
View(intraplate_cvs_sample)
intraplate_cvs_std <- distinct(intraplate_cvs_std,
Sample,
.keep_all = TRUE)
# tidyverse allows us to do our data processing
library("tidyverse")
# readxl allows us to read excel files
library("readxl")
# writexl allows us to write to excel files
library("writexl")
# tidyr lets us reshape our long data into wide data
library("tidyr")
# qpcR lets us merge data frames side by side
library("qpcR")
# reads the raw data excel file and stores it as a variable
raw_data <- read_excel("raw_data\\CHR_US_V1_Ang2_Plate1 (redo 12.7.22).xlsx",
sheet = "RawData")
# converts columns 14-18 with NaN into NA by transforming variable from char into numeric
raw_data[14:18] <- as.data.frame(
sapply(
raw_data[14:18],
as.numeric))
# stores a subset of columns by their index from raw_data as long_data
long_data <- raw_data[c(1,2,6:7,15:21)]
# selects all distinct rows in the "Sample" column of long_data
wide_data <- distinct(long_data,
Sample,
.keep_all = TRUE)
# selects the "Sample" and "Calc. Conc. Mean columns of the wide_data dataframe
wide_data <- wide_data[c(2, 7)]
# removes the blank sample
wide_data <- wide_data %>%
filter(Sample != "Blank")
# changes the column name
colnames(wide_data)[2] = "Ang-2_(pg/mL)_V1"
# removes the standard and QC samples
wide_sample_data <- wide_data[!is.na(as.numeric(wide_data$Sample)), ]
# creates a new data frame looking at lowest limit of detection (LLOD)
llod <- raw_data[c(2:4, 8, 16, 19)]
# creates an LLOD dataframe with just samples
llod_sample <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
add_column(empty_column = NA)
# converts the Sample column in to a numeric data type
llod_sample$Sample <- as.numeric(as.character(llod_sample$Sample))
# creates an LLOD dataframe with just standards
llod_std <- llod %>%
filter(grepl("S", llod$Sample)) %>%
add_column(empty_column = NA)
# creates an LLOD dataframe with just QC
llod_qc <- llod %>%
filter(grepl("QC", llod$Sample)) %>%
add_column(empty_column = NA)
# creates a data frame that tallies the number of samples with a detection range at or below the detection/fit curve
llod_count <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
group_by(`Detection Range`) %>%
tally()
# converts the long data into wide format
llod_count <- pivot_wider(llod_count,
names_from = `Detection Range`,
values_from = `n`)
# merges the various llod dataframes side by side
llod_group <- qpcR:::cbind.na(llod_sample, llod_std, llod_qc, llod_count)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_sample <- distinct(intraplate_cvs_sample,
Sample,
.keep_all = TRUE)
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(empty_column = NA)
intraplate_cvs_std <- distinct(intraplate_cvs_std,
Sample,
.keep_all = TRUE)
# qc
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample))
# creates a new column that is the mean of the QC
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intraplate_cvs_qc <- distinct(intraplate_cvs_qc,
Sample,
.keep_all = TRUE)
intracvs_group <- qpcR:::cbind.na(intraplate_cvs_sample, intraplate_cvs_std, intraplate_cvs_qc)
# adds a new column specifying the number of replicates
intracvs_group$`n =` <- 2
# creates a new spreadsheet of the listed data frames
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
list(RawData = raw_data,
LongData = long_data,
WideData = wide_data,
WideSampleData = wide_sample_data,
LLODs = llod_group,
IntraplateCVs = intracvs_group
),
# sets the path where the excel will be saved
path = "chr_test.xlsx",
# writes columns to top of file
col_names = TRUE
)
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(n = 2,empty_column = NA)
View(intraplate_cvs_sample)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(n = 2,empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_sample <- distinct(intraplate_cvs_sample,
Sample,
.keep_all = TRUE)
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(n = 2,empty_column = NA)
intraplate_cvs_std <- distinct(intraplate_cvs_std,
Sample,
.keep_all = TRUE)
# qc
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample)) %>%
add_column(n = 4)
# creates a new column that is the mean of the QC
intraplate_cvs_qc$Mean <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intraplate_cvs_qc <- distinct(intraplate_cvs_qc,
Sample,
.keep_all = TRUE)
intracvs_group <- qpcR:::cbind.na(intraplate_cvs_sample, intraplate_cvs_std, intraplate_cvs_qc)
# creates a new spreadsheet of the listed data frames
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
list(RawData = raw_data,
LongData = long_data,
WideData = wide_data,
WideSampleData = wide_sample_data,
LLODs = llod_group,
IntraplateCVs = intracvs_group
),
# sets the path where the excel will be saved
path = "chr_test.xlsx",
# writes columns to top of file
col_names = TRUE
)
# tidyverse allows us to do our data processing
library("tidyverse")
# readxl allows us to read excel files
library("readxl")
# writexl allows us to write to excel files
library("writexl")
# tidyr lets us reshape our long data into wide data
library("tidyr")
# qpcR lets us merge data frames side by side
library("qpcR")
# reads the raw data excel file and stores it as a variable
raw_data <- read_excel("raw_data\\CHR_US_V1_Ang2_Plate1 (redo 12.7.22).xlsx",
sheet = "RawData")
# converts columns 14-18 with NaN into NA by transforming variable from char into numeric
raw_data[14:18] <- as.data.frame(
sapply(
raw_data[14:18],
as.numeric))
# stores a subset of columns by their index from raw_data as long_data
long_data <- raw_data[c(1,2,6:7,15:21)]
# selects all distinct rows in the "Sample" column of long_data
wide_data <- distinct(long_data,
Sample,
.keep_all = TRUE)
# selects the "Sample" and "Calc. Conc. Mean columns of the wide_data dataframe
wide_data <- wide_data[c(2, 7)]
# removes the blank sample
wide_data <- wide_data %>%
filter(Sample != "Blank")
# changes the column name
colnames(wide_data)[2] = "Ang-2_(pg/mL)_V1"
# removes the standard and QC samples
wide_sample_data <- wide_data[!is.na(as.numeric(wide_data$Sample)), ]
# creates a new data frame looking at lowest limit of detection (LLOD)
llod <- raw_data[c(2:4, 8, 16, 19)]
# creates an LLOD dataframe with just samples
llod_sample <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
add_column(empty_column = NA)
# converts the Sample column in to a numeric data type
llod_sample$Sample <- as.numeric(as.character(llod_sample$Sample))
# creates an LLOD dataframe with just standards
llod_std <- llod %>%
filter(grepl("S", llod$Sample)) %>%
add_column(empty_column = NA)
# creates an LLOD dataframe with just QC
llod_qc <- llod %>%
filter(grepl("QC", llod$Sample)) %>%
add_column(empty_column = NA)
# creates a data frame that tallies the number of samples with a detection range at or below the detection/fit curve
llod_count <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
group_by(`Detection Range`) %>%
tally()
# converts the long data into wide format
llod_count <- pivot_wider(llod_count,
names_from = `Detection Range`,
values_from = `n`)
# merges the various llod dataframes side by side
llod_group <- qpcR:::cbind.na(llod_sample, llod_std, llod_qc, llod_count)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
add_column(n = 2,empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_sample <- distinct(intraplate_cvs_sample,
Sample,
.keep_all = TRUE)
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(n = 2,empty_column = NA)
intraplate_cvs_std <- distinct(intraplate_cvs_std,
Sample,
.keep_all = TRUE)
# qc
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample)) %>%
add_column(n = 4)
# renames a column to the mean of the QC
intraplate_cvs_qc$`Calc. Conc. CV` <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intraplate_cvs_qc <- distinct(intraplate_cvs_qc,
Sample,
.keep_all = TRUE)
intracvs_group <- qpcR:::cbind.na(intraplate_cvs_sample, intraplate_cvs_std, intraplate_cvs_qc)
# creates a new spreadsheet of the listed data frames
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
list(RawData = raw_data,
LongData = long_data,
WideData = wide_data,
WideSampleData = wide_sample_data,
LLODs = llod_group,
IntraplateCVs = intracvs_group
),
# sets the path where the excel will be saved
path = "chr_test.xlsx",
# writes columns to top of file
col_names = TRUE
)
# tidyverse allows us to do our data processing
library("tidyverse")
# readxl allows us to read excel files
library("readxl")
# writexl allows us to write to excel files
library("writexl")
# tidyr lets us reshape our long data into wide data
library("tidyr")
# qpcR lets us merge data frames side by side
library("qpcR")
# reads the raw data excel file and stores it as a variable
raw_data <- read_excel("raw_data\\CHR_US_V1_Ang2_Plate1 (redo 12.7.22).xlsx",
sheet = "RawData")
# converts columns 14-18 with NaN into NA by transforming variable from char into numeric
raw_data[14:18] <- as.data.frame(
sapply(
raw_data[14:18],
as.numeric))
# stores a subset of columns by their index from raw_data as long_data
long_data <- raw_data[c(1,2,6:7,15:21)]
# selects all distinct rows in the "Sample" column of long_data
wide_data <- distinct(long_data,
Sample,
.keep_all = TRUE)
# selects the "Sample" and "Calc. Conc. Mean columns of the wide_data dataframe
wide_data <- wide_data[c(2, 7)]
# removes the blank sample
wide_data <- wide_data %>%
filter(Sample != "Blank")
# changes the column name
colnames(wide_data)[2] = "Ang-2_(pg/mL)_V1"
# removes the standard and QC samples
wide_sample_data <- wide_data[!is.na(as.numeric(wide_data$Sample)), ]
# creates a new data frame looking at lowest limit of detection (LLOD)
llod <- raw_data[c(2:4, 8, 16, 19)]
# creates an LLOD dataframe with just samples
llod_sample <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
add_column(empty_column = NA)
# converts the Sample column in to a numeric data type
llod_sample$Sample <- as.numeric(as.character(llod_sample$Sample))
# creates an LLOD dataframe with just standards
llod_std <- llod %>%
filter(grepl("S", llod$Sample)) %>%
add_column(empty_column = NA)
# creates an LLOD dataframe with just QC
llod_qc <- llod %>%
filter(grepl("QC", llod$Sample)) %>%
add_column(empty_column = NA)
# creates a data frame that tallies the number of samples with a detection range at or below the detection/fit curve
llod_count <- llod[!is.na(as.numeric(llod$Sample)), ] %>%
group_by(`Detection Range`) %>%
tally()
# converts the long data into wide format
llod_count <- pivot_wider(llod_count,
names_from = `Detection Range`,
values_from = `n`)
# merges the various llod dataframes side by side
llod_group <- qpcR:::cbind.na(llod_sample, llod_std, llod_qc, llod_count)
# takes the Sample ID and Calc. Conc. CV from the long data set
intraplate_cvs <-long_data[c(2, 8)]
intraplate_cvs <- intraplate_cvs %>%
filter(Sample != "Blank")
# creating separate data frames for QC/Std/Samples to improve data clarity
intraplate_cvs_sample <- intraplate_cvs[!is.na(as.numeric(intraplate_cvs$Sample)), ] %>%
# adds
add_column(n = 2,empty_column = NA)
intraplate_cvs_sample$Sample <- as.numeric(as.character(intraplate_cvs_sample$Sample))
intraplate_cvs_sample <- distinct(intraplate_cvs_sample,
Sample,
.keep_all = TRUE)
# std
intraplate_cvs_std <- intraplate_cvs %>%
filter(grepl("S", intraplate_cvs$Sample)) %>%
add_column(n = 2,empty_column = NA)
intraplate_cvs_std <- distinct(intraplate_cvs_std,
Sample,
.keep_all = TRUE)
# qc
intraplate_cvs_qc <- intraplate_cvs %>%
filter(grepl("QC", intraplate_cvs$Sample)) %>%
add_column(n = 4)
# renames a column to the mean of the QC
intraplate_cvs_qc$`Calc. Conc. CV` <- mean(intraplate_cvs_qc$`Calc. Conc. CV`)
intraplate_cvs_qc <- distinct(intraplate_cvs_qc,
Sample,
.keep_all = TRUE)
intracvs_group <- qpcR:::cbind.na(intraplate_cvs_sample, intraplate_cvs_std, intraplate_cvs_qc)
# creates a new spreadsheet of the listed data frames
write_xlsx(
# sets the sheet names -- format is Sheet Name = DF Name
list(RawData = raw_data,
LongData = long_data,
WideData = wide_data,
WideSampleData = wide_sample_data,
LLODs = llod_group,
IntraplateCVs = intracvs_group
),
# sets the path where the excel will be saved
path = "chr_test.xlsx",
# writes columns to top of file
col_names = TRUE
)
